# vim: ft=tmux tw=0

TAB_SEPERATOR_FORWARDS=
TAB_SEPERATOR_BACKWARDS=
TAB_COLOR=red
CLOCK_COLOR=white
STATUS_ICON=

if-shell -b 'test "$(uname -s)" = Darwin' 'TAB_COLOR=red'
if-shell -b 'test "$(uname -s)" = Linux' 'TAB_COLOR=blue'

# Enable true color support, the terminal info is from the outside of tmux
# https://sunaku.github.io/tmux-24bit-color.html#usage
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on


# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix
if-shell 'test -n "$SSH_CLIENT"' 'bind a send-prefix'

# reload ~/.tmux.conf using PREFIX r
bind-key r source-file ~/.tmux.conf \; display "Reloaded!"

set -g history-limit 100000

# Neovim https://github.com/neovim/neovim/wiki/FAQ#esc-in-tmux-or-gnu-screen-is-delayed
set -sg escape-time 0
set -g focus-events on

# set window and pane index to 1 (0 by default)
set -g base-index 1
setw -g pane-base-index 1
setw -g automatic-rename on
set -g renumber-windows on # re-number windows when one is closed
set -g set-titles on                        # set terminal title
set -g set-titles-string '#h ❐ #S ● #I #W'
set -g display-time 1500 # tmux messages are displayed for 1.5 seconds
set -g display-panes-time 800 # slightly longer pane indicators display time

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on


# use vim keybindings in copy mode
setw -g mode-keys vi
setw -g other-pane-height 25
setw -g other-pane-width 80

# Set the repeat-time to 1 second so that multiple commands can be entered
# without sending the prefix-key within 1 second. Commands are made repeatable
# by -r option of bind-key. By default it is 500 ms.
set -g repeat-time 1000


# Tmux Navigator integration
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "($is_vim || $is_fzf)" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "($is_vim || $is_fzf)" "send-keys C-k" "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\\ select-pane -l

# Open new tab in same path
bind c new-window -c "#{pane_current_path}"
# Vim style movements
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"

bind-key C-o rotate-window
bind-key C-l send-keys 'C-l'

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

# Resize Windows
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Pressing Ctrl+Shift+Left (will move the current window to the left. Similarly
# right. No need to use the modifier (C-b).
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

bind-key -n S-Right next-window
bind-key -n S-Left previous-window

# Enable mouse mode (tmux 2.1 and above)
set -g mouse on

# bind-key a last-pane
bind-key q display-panes

# ---------------------
# Copy & Paste
# ---------------------
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind-key -T copy-mode-vi Escape send-keys -X cancel

if-shell 'test "$(uname -s)" = Darwin' 'bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"'
if-shell 'test "$(uname -s)" = Linux' 'bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "xclip -in -selection clipboard"'

# Quick kill-session
bind-key C-q confirm-before 'kill-session'
# Disable confirm before killing
bind-key x kill-pane
bind-key b break-pane -d
bind-key j choose-tree -Z

# ====> Styling

# pane borders
set -g pane-border-style fg=white,bg=default
set -g pane-active-border-style fg=brightblue,bg=default

# command line
set -g message-style fg=default,bg=default,bright
set -g window-status-activity-style bold

# clock
set-window-option -g clock-mode-colour brightblue

set -g status-left-length 32
set -g status-right-length 150

set -g status-fg white
set -g status-bg black

set -g status-left "#[fg=black,bg=white,bold] $STATUS_ICON #S #[fg=white,bg=colour238,nobold]$TAB_SEPERATOR_FORWARDS#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=black,nobold]$TAB_SEPERATOR_FORWARDS"
set -g window-status-format "#[fg=white,bg=black] #I #W "
set -g window-status-current-format "#[fg=black,bg=$TAB_COLOR]$TAB_SEPERATOR_FORWARDS#[fg=white,bg=$TAB_COLOR,noreverse,bold] - #I #W -#[fg=$TAB_COLOR,bg=black,nobold]$TAB_SEPERATOR_FORWARDS"
set -g status-right "#[fg=$CLOCK_COLOR,bg=black]$TAB_SEPERATOR_BACKWARDS#[fg=black,bg=$CLOCK_COLOR] %H:%M:%S %d-%b-%y "

# TPM Plugins
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
