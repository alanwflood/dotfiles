local wk_exists, wk = pcall(require, 'which-key');

if not wk_exists then
  return
end

wk.register({
  ["<space>"] = { 'Buffers' },
  ['<C-space>'] = { 'Last Search' },
  s = {
    -- Set in telescope.lua
    name = "Search",
    a = { "All Files" },
    b = { "Buffers" },
    c = { "Current Buffer" },
    f = { "Files" },
    r = { "Recent Files" },
    ['?'] = { "Help Tags" },
    t = { "Tags" },
    o = { "Tags in Current Buffer" },
    s = { "Grep String" },
    g = { "Grep" },
    l = { 'Last Search' },
  },
  l = {
    -- Set in lsp.lua
    name = "LSP",
    a = { 'Perform code action' },
    d = { 'Go to definition' },
    D = { 'Go to declaration' },
    e = { 'Show diagnostics' },
    f = { 'Format buffer' },
    i = { 'Go to implementation' },
    l = { 'Open diagnostics list' },
    p = { 'Preview definition' },
    r = { 'Rename' },
    s = { 'Search for references' },
    w = {
      name = "Workspace",
      a = { 'Add workspace' },
      d = { 'Delete workspace' },
      l = { 'List workspaces' },
    }
  },
  g = {
    name = 'Git',
    g = { ":Git<cr>", "Open Fugitive" },
    b = { "Blame line" },
    B = { ":Git blame<cr>", "Open Blame" },
    d = { ":DiffviewOpen<cr>", "Open Diffview" },
    c = { ":Telescope git_commits<cr>", "View Commits" },
    s = { ":Telescope git_status<cr>", "View Current Status" },
    h = {
      name = 'Hunk',
      s = { "Stage hunk" },
      u = { "Undo stage hunk"},
      r = { "Reset hunk"},
      R = { "Reset buffer"},
      p = { "Preview hunk"},
      S = { "Stage buffer"},
      U = { "Reset buffer index"},
    },
  },
  t = {
    name = 'File Tree',
    t = {":NvimTreeToggle<CR>", "Toggle file tree"},
    r = {":NvimTreeRefresh<CR>", "Refresh file tree"},
    f = {":NvimTreeFindFile<CR>", "Find file in tree"}
  },
}, { prefix = "<leader>" });

-- Vim Unimpaired, LSP, Gitsigns bindings
wk.register({
  ["["] = {
    ['<space>'] = { 'Add [count] blank lines above' },
    a = { 'Previous file' },
    A = { 'First file' },
    b = { 'Previous buffer' },
    B = { 'First buffer' },
    l = { 'Previous location list' },
    L = { 'First location list' },
    ["<C-L>"] = { 'Previous file location list' },
    q = { 'Previous Quick fix list' },
    Q = { 'First Quick fix list' },
    ["<C-Q>"] = { 'Previous file Quick fix list' },
    t = { 'Previous tag' },
    T = { 'First tag' },
    ["<C-T>"] = { 'Previous tag preview' },
    e = { 'Exchange line above [count]' },
    c = { 'Previous SCM hunk' }, -- Gitsigns
    f = { 'Previous file in directory' },
    n = { 'Previous SCM conflict' },
    d = { 'Previous diagnostic' },
    x = { 'XML encode' },
    u = { 'Url encode' },
    C = { 'C string encode' },
    o = {
      name = "+enable",
      b = { "background dark" },
      c = { "cursorline" },
      d = { "diff" },
      h = { "hlsearch" },
      i = { "ignorecase" },
      l = { "list" },
      n = { "number" },
      r = { "relativenumber" },
      s = { "spell" },
      u = { "cursorcolumn" },
      v = { "virtualedit" },
      w = { "wrap" },
      x = { "cursorline & cursorcolumn" },
    },
  },
  ["]"] = {
    ['<space>'] = { 'Add [count] blank lines below' },
    a = { 'Next file' },
    A = { 'Last file' },
    b = { 'Next buffer' },
    B = { 'Last buffer' },
    l = { 'Next location list' },
    L = { 'Last location list' },
    ["<C-L>"] = { 'Next file location list' },
    q = { 'Next Quick fix list' },
    Q = { 'Last Quick fix list' },
    ["<C-Q>"] = { 'Next file Quick fix list' },
    t = { 'Next tag' },
    T = { 'Last tag' },
    ["<C-T>"] = { 'Next tag preview' },
    e = { 'Exchange line below [count]' },
    c = { 'Next SCM hunk' }, -- Gitsigns
    f = { 'Next file in directory' },
    n = { 'Next SCM conflict' },
    d = { 'Next diagnostic' },
    x = { 'XML decode' },
    u = { 'Url decode' },
    C = { 'C string decode' },
    o = {
      name = "+disable",
      b = { "background light" },
      c = { "cursorline" },
      d = { "diff" },
      h = { "hlsearch" },
      i = { "ignorecase" },
      l = { "list" },
      n = { "number" },
      r = { "relativenumber" },
      s = { "spell" },
      u = { "cursorcolumn" },
      v = { "virtualedit" },
      w = { "wrap" },
      x = { "cursorline & cursorcolumn" },
    },
  },
  ["y"] = {
    o = {
      name = "+toggle",
      b = { "background" },
      c = { "cursorline" },
      d = { "diff" },
      h = { "hlsearch" },
      i = { "ignorecase" },
      l = { "list" },
      n = { "number" },
      r = { "relativenumber" },
      s = { "spell" },
      u = { "cursorcolumn" },
      v = { "virtualedit" },
      w = { "wrap" },
      x = { "cursorline & cursorcolumn" },
      g = {
        name = "+git signs",
        b = {":Gitsigns toggle_current_line_blame<CR>", "Toggle Inline Blame"},
        g = {":Gitsigns toggle_signs<CR>", "Toggle Column Signs"},
        n = {":Gitsigns toggle_numhl<CR>", "Toggle Line Number Highlight"},
        l = {":Gitsigns toggle_linehl<CR>", "Toggle Line Highlight"},
        w = {":Gitsigns toggle_word_diff<CR>", "Toggle Word Diff"},
      }
    },
  },
})
